packages:
  - tidyverse
  - meddle # at least v0.0.12
  - scipiper
  - readr
  - sbtools
  - sf

sources:
  - src/sb_utils.R
  - src/file_utils.R
  - src/create_spatial_data.R
  - src/clean_data_files.R

targets:
  all:
    depends:
      - log/sb_posted_files.csv

  # create target of spatial file
  # please note that the extract_feature function (below) from the meddle package must be run to create certain pieces of spatial metadata
  # if you are not uploading any spatial data files to your data release,
  # you will need to find a shapefile that represents the geographic area or your data release
  # upload this file to your pipeline repostiory, read it in with the read_spatial_file function below, and extract_feature will pull the necessary metadata
  # you do NOT need to upload this file to ScienceBase  with the sf_to_zip function if it was not a planned part of your data release
  lake_metadata:
    command: read.csv(I('../lake-temperature-out/1_fetch/out/lake_metadata.csv'))

  sf_spatial_data:
    command: create_spatial_data(in_dat = lake_metadata)

  # grab metadata from spatial file
  spatial_metadata:
    command: extract_feature(sf_spatial_data)
  
  out_data/spatial.zip:
     command: sf_to_zip(zip_filename = target_name, 
       sf_object = sf_spatial_data, layer_name = I('spatial_data'))
       
  out_data/lake_metadata.csv:
    command: write_meta(indat = sf_spatial_data, outfile = target_name)
    
  out_xml/fgdc_metadata.xml:
    command: render(filename = target_name,
      "in_text/text_data_release.yml",
      spatial_metadata)
  
  in_data/oha_annual_scenarios.csv:
    command: file.copy('../lake-temperature-out/3_summarize/out/oha_annual_scenarios.csv', target_name)
    
  in_data/oha_by_lake_scenario.csv:
    command: file.copy('../lake-temperature-out/3_summarize/out/oha_by_lake_scenario.csv', target_name)
  
  in_data/oha_metrics_by_lake.csv:
    command: file.copy('../lake-temperature-out/3_summarize/out/oha_metrics_by_lake.csv', target_name)

  out_data/oha_annual_scenarios.csv:
    command: munge_annual(in_file = 'in_data/oha_annual_scenarios.csv', out_file = target_name)

  out_data/oha_metrics_by_lake.csv:
    command: munge_metrics(in_file = 'in_data/oha_metrics_by_lake.csv', target_name)
       
  log/sb_posted_files.csv:
    command: sb_replace_files(filename = target_name, 
      sb_id = I('6373b9edd34ed907bf6c6e0c'),
      "out_data/daily_oha_clarity_scenarios.zip",
      'out_data/oha_annual_scenarios.csv',
      'out_data/oha_metrics_by_lake.csv',
      'out_data/lake_metadata.csv',
      "out_data/spatial.zip",
      "out_xml/fgdc_metadata.xml",
      sources = "src/sb_utils.R")
      